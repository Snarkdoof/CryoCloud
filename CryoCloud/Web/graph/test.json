
var wf = {
  "options": {
    "config_file": {"default": "config.cfg", "help": "Path to config file"},
    "schema_file": {"default": "netposter.schema", "help": "Schema for netposter"}
  },
  "workflow": {
    "name": "CryoniteOcean_Wind",
    "description": "CryoniteOcean Wind package",
    "modules": [
      {
        "module": "netwatcher",
        "name": "NetWatcher",
        "config": "Cryonite.NetWatcher",
        "args": {
          "port": {"config": "port", "default": 1209},
          "schema": {"config": "schema", "default": "wind.schema"}
        },
        "downstreamOf": ["entry"]
      },
      {
        "module": "unzip",
        "name": "Unzip",
        "runOn": "success",
        "config": "Cryonite",
        "args": {
          "src": {"output": "NetWatcher.fullpath"},
          "tempDir": {"config": "tempDir"}
        },
        "downstreamOf": ["NetWatcher"],
        "resolveOnAny": true,
        "children": [{
          "module": "remove",
          "runOn": "never",
          "args": {
            "src": {"output": "NetWatcher.fullpath"},
            "ignoreerrors": true
          }
        }, {
          "module": "wind",
          "runOn": "success",
          "name": "Wind",
          "dir": "/home/njaal/git/CryoniteOcean/develop/",
          "args": {
            "fileList": {"output": "Unzip.fileList"},
            "configOverride": {"output": "NetWatcher.configOverride", "default": ""},
            "program": "wind.sav",
            "configFile": "wind.cfg"
          },
          "children": [{
            "module": "remove",
            "runOn": "always",
            "args": {
              "src": {"output": "Unzip.destDir"},
              "recursive": true
            }
          }, {
            "module": "KSAT_report",
            "runOn": "success",
            "args": {
              "product": {"output": "parent.product"}
            }
          }, {
            "module": "KSAT_report",
            "runOn": "error",
            "args": {
              "product": {"output": "parent.product"},
              "error": {"output": "parent.result"}
            }
          }]
        }]
      }
    ]
  }
}
